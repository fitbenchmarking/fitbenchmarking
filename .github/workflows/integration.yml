name: 'Integration'

on:
  workflow_dispatch:
  pull_request_review:
    types: [submitted]

jobs:
  default_tests_win_mac:
    name: Default Unit Tests
    if: github.event.review.state == 'approved' && github.event.repository.fork == false
    strategy:
      fail-fast: false
      matrix:
        os: [macos-13, windows-latest]
        python: ['3.9', '3.13']
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Install python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python }}
        check-latest: true
    - name: Install dependencies (macOS)
      if: matrix.os == 'macos-13'
      run: |
        echo "setuptools<78.0.0" > /tmp/constraints.txt
        pip install .[bumps,DFO,gradient-free,minuit,SAS,numdifftools,lmfit,nlopt]
        pip install --upgrade .[dev]
      env:
        PIP_CONSTRAINT: /tmp/constraints.txt
    - name: Install dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        powershell -Command "Set-Content -Path 'C:\temp\constraints.txt' -Value 'setuptools<78.0.0'"
        pip install .[bumps,DFO,gradient-free,minuit,SAS,numdifftools,lmfit,nlopt]
        pip install --upgrade .[dev]
      env:
        PIP_CONSTRAINT: C:\temp\constraints.txt
    - name: Run tests (macOS)
      if: matrix.os == 'macos-13'
      run: ci/unit_tests_default.sh
    - name: Run tests (Windows)
      if: matrix.os == 'windows-latest'
      run: bash ci/unit_tests_default.sh