name: 'Tests'

on:
  push:
    branches:
      - 'master'
      - 'release-**'
  pull_request:
    branches:
      - 'master'
      - 'release-**'
  release:
    types: [published]
  schedule:
    - cron: '0 9 * * Mon'
  workflow_dispatch:

jobs:
  default_system_linux:
    name: 'Default System Tests (Linux)'
    runs-on: 'ubuntu-latest'
    container:
      image: 'fitbenchmarking/fitbenchmarking-deps:latest'
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Installing
      run: |
        sudo -HE --preserve-env=PATH $VIRTUAL_ENV/bin/pip install -r requirements.txt
        sudo -HE --preserve-env=PATH $VIRTUAL_ENV/bin/pip install .[bumps,DFO,minuit,SAS]
    - name: 'Running Tests'
      run: |
        ci/system_tests_default.sh
  
  full_system_linux:
    name: 'Full System Tests (Linux)'
    runs-on: 'ubuntu-latest'
    container:
      image: 'fitbenchmarking/fitbenchmarking-extras:latest'
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Installing
      run: |
        sudo -HE --preserve-env=PATH $VIRTUAL_ENV/bin/pip install -r requirements.txt
        sudo -HE --preserve-env=PATH $VIRTUAL_ENV/bin/pip install .[bumps,DFO,minuit,SAS]
        mkdir -p $MASTSIF
        mkdir -p $PYCUTEST_CACHE
    - name: 'Running Tests'
      run: |
        ci/system_tests.sh
  
  default_unit_linux:
    name: 'Default Unit Tests (Linux)'
    runs-on: 'ubuntu-latest'
    container:
      image: 'fitbenchmarking/fitbenchmarking-deps:latest'
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Installing
      run: |
        sudo -HE --preserve-env=PATH $VIRTUAL_ENV/bin/pip install -r requirements.txt
        sudo -HE --preserve-env=PATH $VIRTUAL_ENV/bin/pip install .[bumps,DFO,minuit,SAS]
    - name: 'Running Tests'
      run: |
        ci/unit_tests_default.sh
        
  full_unit_linux:
    name: 'Full Unit Tests (Linux)'
    runs-on: 'ubuntu-latest'
    container:
      image: 'fitbenchmarking/fitbenchmarking-extras:latest'
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Installing
      run: |
        sudo -HE --preserve-env=PATH $VIRTUAL_ENV/bin/pip install -r requirements.txt
        sudo -HE --preserve-env=PATH $VIRTUAL_ENV/bin/pip install .[bumps,DFO,minuit,SAS]
        mkdir -p $MASTSIF
        mkdir -p $PYCUTEST_CACHE
    - name: 'Running Tests'
      run: |
        ci/unit_tests.sh
    - name: 'Submit Coverage'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        coveralls --service=github

  linting_linux:
    name: 'Linting Tests (Linux)'
    runs-on: 'ubuntu-latest'
    steps:
    - name: 'Checkout code'
      uses: actions/checkout@v2
    - name: 'Choose Python Version'
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: 'Installing'
      run: |
        python -m pip install --upgrade pip==20.0.2
        pip install -r requirements.txt
        pip install .[bumps,DFO,minuit,SAS,numdifftools]
        sudo apt-get install libgsl-dev
        pip install pygsl
        pip install pycutest
    - name: 'Run Linting'
      run: |
        ci/linting_tests.sh
      
  default_unit_windows:
    name: 'Default Unit Tests (Windows)'
    runs-on: 'windows-latest'
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: 'Choose Python Version'
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Installing
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install .[bumps,DFO,minuit,SAS]
    - name: 'Running Tests'
      run: |
        bash ci/unit_tests_default.sh
