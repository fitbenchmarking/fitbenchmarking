.. _plotting_option:

################
Plotting Options
################

The plotting section contains options to control how results are presented.

Make plots (:code:`make_plots`)
-------------------------------

This allows the user to decide whether or not to create plots during runtime.
Toggling this to False will be much faster on large data sets.

Default is ``True`` (``yes``/``no`` can also be used)

.. code-block:: rst

    [PLOTTING]
    make_plots: yes

Colour Map (:code:`colour_map`), (:code:`cmap_range`), (:code:`colour_ulim`)
------------------------------

Together these three options control the colours to be used for the shading of the html results tables from the
library of colourmaps available in ``matplotlib``, see the complete library `here <https://matplotlib.org/stable/gallery/color/colormap_reference.html>`_.
The following sequential colourmaps are recommended:

.. figure:: ../../images/recommended_cmaps.png
   :alt: Recommended Colourmaps

`colour_map` is used to specify a colourmap by name as a string, e.g. `'viridis'` or `'Reds'`. The `cmap_range` option allows the
user to crop the colourmap by specifying a two element list in the options, e.g. `[0.2, 0.8]`, which controls the start and end
The text in the html table currently is always white so caution must be taken when choosing a colourmap to ensure readability.
The shading of a given cell in a row of a results table is sampled from the colourmap based on the relative result;
sampling is done according to a logarithmic scale to accomodate large differences. Colourmap Range and Upper Shading Limit plotting options give further control of the use of the chosen colourmap.

Default is ``magma_r``

Colourmap Range (:code:`cmap_range`)
------------------------------------

Chooses the

Colour scale (:code:`colour_scale`)
-----------------------------------

Lists thresholds for each colour in the html table.
In the example below, this means that values less than 1.1 will
have the top ranking (brightest) and values over 3 will show as
the worst ranking (deep red). 

If `parameter_ranges` have been set for a problem, then solutions
flagged as not respecting the specified bounds will be given the
worst ranking colour.

Default thresholds are ``1.1, 1.33, 1.75, 3, and inf``

.. code-block:: rst

    [PLOTTING]
    colour_scale: 1.1, #fef0d9
                  1.33, #fdcc8a
                  1.75, #fc8d59
                  3, #e34a33
                  inf, #b30000


.. _ComparisonOption:

Comparison mode (:code:`comparison_mode`)
-----------------------------------------

This selects the mode for displaying values in the resulting table
options are ``abs``, ``rel``, ``both``:

* ``abs`` indicates that the absolute values should be displayed
* ``rel`` indicates that the values should all be relative to the best result
* ``both`` will show data in the form "abs (rel)"

Default is ``both``

.. code-block:: rst

    [PLOTTING]
    comparison_mode: both


Table type (:code:`table_type`)
-------------------------------

This selects the types of tables to be produced in FitBenchmarking.
Options are:

* ``acc`` indicates that the resulting table should contain the chi squared values for each of the minimizers.
* ``runtime`` indicates that the resulting table should contain the runtime values for each of the minimizers.
* ``compare`` indicates that the resulting table should contain both the chi squared value and runtime values for each of the minimizers. The tables produced have the chi squared values on the top line of the cell and the runtime on the bottom line of the cell.
* ``local_min`` indicates that the resulting table should return true if a local minimum was found, or false otherwise.
  The value of :math:`\frac{|| J^T r||}{||r||}` for those parameters is also returned.
  The output looks like ``{bool} (norm_value)``, and the colouring is red for false and cream for true.
  This option is only meaningful for least-squares cost functions.

Default is ``acc``, ``runtime``, ``compare``, and ``local_min``.

.. code-block:: rst

    [PLOTTING]
    table_type: acc
                runtime
                compare
                local_min


Results directory (:code:`results_dir`)
---------------------------------------

This is used to select where the output should be saved

Default is ``fitbenchmarking_results``

.. code-block:: rst

    [PLOTTING]
    results_dir: fitbenchmarking_results
