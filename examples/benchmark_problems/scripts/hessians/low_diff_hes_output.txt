NIST Low Difficulty

Chwirut
y = exp(-b1*x)/(b2+b3*x)  +  e
Jacobian:
Matrix([[-x*exp(-b1*x)/(b2 + b3*x), -exp(-b1*x)/(b2 + b3*x)**2, -x*exp(-b1*x)/(b2 + b3*x)**2]])
Hessian:
Matrix([[x**2*exp(-b1*x)/(b2 + b3*x), x*exp(-b1*x)/(b2 + b3*x)**2, x**2*exp(-b1*x)/(b2 + b3*x)**2], [x*exp(-b1*x)/(b2 + b3*x)**2, 2*exp(-b1*x)/(b2 + b3*x)**3, 2*x*exp(-b1*x)/(b2 + b3*x)**3], [x**2*exp(-b1*x)/(b2 + b3*x)**2, 2*x*exp(-b1*x)/(b2 + b3*x)**3, 2*x**2*exp(-b1*x)/(b2 + b3*x)**3]])

Chwirut2
y = exp(-b1*x)/(b2+b3*x)  +  e
Jacobian:
Matrix([[-x*exp(-b1*x)/(b2 + b3*x), -exp(-b1*x)/(b2 + b3*x)**2, -x*exp(-b1*x)/(b2 + b3*x)**2]])
Hessian:
Matrix([[x**2*exp(-b1*x)/(b2 + b3*x), x*exp(-b1*x)/(b2 + b3*x)**2, x**2*exp(-b1*x)/(b2 + b3*x)**2], [x*exp(-b1*x)/(b2 + b3*x)**2, 2*exp(-b1*x)/(b2 + b3*x)**3, 2*x*exp(-b1*x)/(b2 + b3*x)**3], [x**2*exp(-b1*x)/(b2 + b3*x)**2, 2*x*exp(-b1*x)/(b2 + b3*x)**3, 2*x**2*exp(-b1*x)/(b2 + b3*x)**3]])

DanWood
y  = b1*x**b2  +  e
Jacobian:
Matrix([[x**b2, b1*x**b2*log(x)]])
Hessian:
Matrix([[0, x**b2*log(x)], [x**b2*log(x), b1*x**b2*log(x)**2]])

Gauss1
y = b1*exp( -b2*x ) + b3*exp( -(x-b4)**2 / b5**2) + b6*exp( -(x-b7)**2 / b8**2 ) + e
Jacobian:
Matrix([[exp(-b2*x), -b1*x*exp(-b2*x), exp(-(-b4 + x)**2/b5**2), -b3*(2*b4 - 2*x)*exp(-(-b4 + x)**2/b5**2)/b5**2, 2*b3*(-b4 + x)**2*exp(-(-b4 + x)**2/b5**2)/b5**3, exp(-(-b7 + x)**2/b8**2), -b6*(2*b7 - 2*x)*exp(-(-b7 + x)**2/b8**2)/b8**2, 2*b6*(-b7 + x)**2*exp(-(-b7 + x)**2/b8**2)/b8**3]])
Hessian:
Matrix([[0, -x*exp(-b2*x), 0, 0, 0, 0, 0, 0], [-x*exp(-b2*x), b1*x**2*exp(-b2*x), 0, 0, 0, 0, 0, 0], [0, 0, 0, -(2*b4 - 2*x)*exp(-(-b4 + x)**2/b5**2)/b5**2, 2*(-b4 + x)**2*exp(-(-b4 + x)**2/b5**2)/b5**3, 0, 0, 0], [0, 0, -(2*b4 - 2*x)*exp(-(-b4 + x)**2/b5**2)/b5**2, -2*b3*exp(-(-b4 + x)**2/b5**2)/b5**2 + b3*(2*b4 - 2*x)**2*exp(-(-b4 + x)**2/b5**2)/b5**4, 2*b3*(2*b4 - 2*x)*exp(-(-b4 + x)**2/b5**2)/b5**3 - 2*b3*(-b4 + x)**2*(2*b4 - 2*x)*exp(-(-b4 + x)**2/b5**2)/b5**5, 0, 0, 0], [0, 0, 2*(-b4 + x)**2*exp(-(-b4 + x)**2/b5**2)/b5**3, 2*b3*(2*b4 - 2*x)*exp(-(-b4 + x)**2/b5**2)/b5**3 - 2*b3*(-b4 + x)**2*(2*b4 - 2*x)*exp(-(-b4 + x)**2/b5**2)/b5**5, -6*b3*(-b4 + x)**2*exp(-(-b4 + x)**2/b5**2)/b5**4 + 4*b3*(-b4 + x)**4*exp(-(-b4 + x)**2/b5**2)/b5**6, 0, 0, 0], [0, 0, 0, 0, 0, 0, -(2*b7 - 2*x)*exp(-(-b7 + x)**2/b8**2)/b8**2, 2*(-b7 + x)**2*exp(-(-b7 + x)**2/b8**2)/b8**3], [0, 0, 0, 0, 0, -(2*b7 - 2*x)*exp(-(-b7 + x)**2/b8**2)/b8**2, -2*b6*exp(-(-b7 + x)**2/b8**2)/b8**2 + b6*(2*b7 - 2*x)**2*exp(-(-b7 + x)**2/b8**2)/b8**4, 2*b6*(2*b7 - 2*x)*exp(-(-b7 + x)**2/b8**2)/b8**3 - 2*b6*(-b7 + x)**2*(2*b7 - 2*x)*exp(-(-b7 + x)**2/b8**2)/b8**5], [0, 0, 0, 0, 0, 2*(-b7 + x)**2*exp(-(-b7 + x)**2/b8**2)/b8**3, 2*b6*(2*b7 - 2*x)*exp(-(-b7 + x)**2/b8**2)/b8**3 - 2*b6*(-b7 + x)**2*(2*b7 - 2*x)*exp(-(-b7 + x)**2/b8**2)/b8**5, -6*b6*(-b7 + x)**2*exp(-(-b7 + x)**2/b8**2)/b8**4 + 4*b6*(-b7 + x)**4*exp(-(-b7 + x)**2/b8**2)/b8**6]])

Gauss2
y = b1*exp( -b2*x ) + b3*exp( -(x-b4)**2 / b5**2) + b6*exp( -(x-b7)**2 / b8**2 ) + e
Jacobian:
Matrix([[exp(-b2*x), -b1*x*exp(-b2*x), exp(-(-b4 + x)**2/b5**2), -b3*(2*b4 - 2*x)*exp(-(-b4 + x)**2/b5**2)/b5**2, 2*b3*(-b4 + x)**2*exp(-(-b4 + x)**2/b5**2)/b5**3, exp(-(-b7 + x)**2/b8**2), -b6*(2*b7 - 2*x)*exp(-(-b7 + x)**2/b8**2)/b8**2, 2*b6*(-b7 + x)**2*exp(-(-b7 + x)**2/b8**2)/b8**3]])
Hessian:
Matrix([[0, -x*exp(-b2*x), 0, 0, 0, 0, 0, 0], [-x*exp(-b2*x), b1*x**2*exp(-b2*x), 0, 0, 0, 0, 0, 0], [0, 0, 0, -(2*b4 - 2*x)*exp(-(-b4 + x)**2/b5**2)/b5**2, 2*(-b4 + x)**2*exp(-(-b4 + x)**2/b5**2)/b5**3, 0, 0, 0], [0, 0, -(2*b4 - 2*x)*exp(-(-b4 + x)**2/b5**2)/b5**2, -2*b3*exp(-(-b4 + x)**2/b5**2)/b5**2 + b3*(2*b4 - 2*x)**2*exp(-(-b4 + x)**2/b5**2)/b5**4, 2*b3*(2*b4 - 2*x)*exp(-(-b4 + x)**2/b5**2)/b5**3 - 2*b3*(-b4 + x)**2*(2*b4 - 2*x)*exp(-(-b4 + x)**2/b5**2)/b5**5, 0, 0, 0], [0, 0, 2*(-b4 + x)**2*exp(-(-b4 + x)**2/b5**2)/b5**3, 2*b3*(2*b4 - 2*x)*exp(-(-b4 + x)**2/b5**2)/b5**3 - 2*b3*(-b4 + x)**2*(2*b4 - 2*x)*exp(-(-b4 + x)**2/b5**2)/b5**5, -6*b3*(-b4 + x)**2*exp(-(-b4 + x)**2/b5**2)/b5**4 + 4*b3*(-b4 + x)**4*exp(-(-b4 + x)**2/b5**2)/b5**6, 0, 0, 0], [0, 0, 0, 0, 0, 0, -(2*b7 - 2*x)*exp(-(-b7 + x)**2/b8**2)/b8**2, 2*(-b7 + x)**2*exp(-(-b7 + x)**2/b8**2)/b8**3], [0, 0, 0, 0, 0, -(2*b7 - 2*x)*exp(-(-b7 + x)**2/b8**2)/b8**2, -2*b6*exp(-(-b7 + x)**2/b8**2)/b8**2 + b6*(2*b7 - 2*x)**2*exp(-(-b7 + x)**2/b8**2)/b8**4, 2*b6*(2*b7 - 2*x)*exp(-(-b7 + x)**2/b8**2)/b8**3 - 2*b6*(-b7 + x)**2*(2*b7 - 2*x)*exp(-(-b7 + x)**2/b8**2)/b8**5], [0, 0, 0, 0, 0, 2*(-b7 + x)**2*exp(-(-b7 + x)**2/b8**2)/b8**3, 2*b6*(2*b7 - 2*x)*exp(-(-b7 + x)**2/b8**2)/b8**3 - 2*b6*(-b7 + x)**2*(2*b7 - 2*x)*exp(-(-b7 + x)**2/b8**2)/b8**5, -6*b6*(-b7 + x)**2*exp(-(-b7 + x)**2/b8**2)/b8**4 + 4*b6*(-b7 + x)**4*exp(-(-b7 + x)**2/b8**2)/b8**6]])

Lanczos3
y = b1*exp(-b2*x) + b3*exp(-b4*x) + b5*exp(-b6*x)  +  e
Jacobian:
Matrix([[exp(-b2*x), -b1*x*exp(-b2*x), exp(-b4*x), -b3*x*exp(-b4*x), exp(-b6*x), -b5*x*exp(-b6*x)]])
Hessian:
Matrix([[0, -x*exp(-b2*x), 0, 0, 0, 0], [-x*exp(-b2*x), b1*x**2*exp(-b2*x), 0, 0, 0, 0], [0, 0, 0, -x*exp(-b4*x), 0, 0], [0, 0, -x*exp(-b4*x), b3*x**2*exp(-b4*x), 0, 0], [0, 0, 0, 0, 0, -x*exp(-b6*x)], [0, 0, 0, 0, -x*exp(-b6*x), b5*x**2*exp(-b6*x)]])

Misra1a
y = b1*(1-exp(-b2*x))  +  e
Jacobian:
Matrix([[1 - exp(-b2*x), b1*x*exp(-b2*x)]])
Hessian:
Matrix([[0, x*exp(-b2*x)], [x*exp(-b2*x), -b1*x**2*exp(-b2*x)]])

Misra1b
y = b1 * (1-(1+b2*x/2)**(-2))  +  e
Jacobian:
Matrix([[1 - 1/(b2*x/2 + 1)**2, b1*x/(b2*x/2 + 1)**3]])
Hessian:
Matrix([[0, x/(b2*x/2 + 1)**3], [x/(b2*x/2 + 1)**3, -3*b1*x**2/(2*(b2*x/2 + 1)**4)]])
