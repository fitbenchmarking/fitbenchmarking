# Template for using docker

# From https://docs.microsoft.com/en-gb/azure/devops/pipelines/process/templates?view=azure-devops#job-stage-and-step-templates-with-parameters

parameters:
- name: name
  default: Ubuntu_Bionic
- name: vmImage
  default: ubuntu-18.04
- name: test_type
  default: unit
- name: full_install
  type: boolean
  default: False
- name: coverage
  type: boolean
  default: False

jobs:
- job: ${{ parameters.name }}

  variables:
  - group: coverage

  pool:
    vmImage: ${{ parameters.vmImage }}
  
  ${{ if eq(parameters.full_install, true) }}:
    container:
      image: fitbenchmarking/fitbenchmarking-extras:latest
  ${{ if eq(parameters.full_install, false) }}:
    container: 
      image: fitbenchmarking/fitbenchmarking-deps:latest
  
  steps:
  - script: |
      env
      sudo -E --preserve-env=PATH /opt/venv/bin/python -m pip install -r requirements.txt
      sudo -E --preserve-env=PATH /opt/venv/bin/python -m pip install .[bumps,DFO,minuit,SAS]
    displayName: 'Install FitBenchmarking and requirements'

  - ${{ if eq(parameters.full_install, true) }}:
    - script: |
        sudo -E mkdir -p $MASTSIF
        sudo -E chown $(whoami) $MASTSIF
        sudo -E mkdir -p $PYCUTEST_CACHE
        sudo -E chown $(whoami) $PYCUTEST_CACHE
        pipelines/${{ parameters.test_type }}_tests.sh
      displayName: 'Running ${{ parameters.test_type }} tests - Full Install'
  - ${{ if eq(parameters.full_install, false) }}:
    - script: |
        pipelines/${{ parameters.test_type }}_tests_default.sh
      displayName: 'Running ${{ parameters.test_type }} tests - Default Install'
  
  - ${{ if eq(parameters.coverage, true) }}:
    - script: |
        # Hack while coveralls doesn't explicitly support Azure
        export CIRCLECI=1
        export CIRCLE_BUILD_NUM=$BUILD_BUILDNUMBER
        export CIRCLE_BRANCH=$BUILD_SOURCEBRANCH
        echo $CIRCLE_BRANCH
        mv .coverage .coverage.docker
        coverage combine --append
        coveralls
      displayName: 'Update Coverage'
      env:
        COVERALLS_REPO_TOKEN: $(token)
        COVERALLS_SERVICE_NAME: azure-pipelines
